

----- Page 1 -----
-
en
tt

Database Management



----- Page 2 -----
OUTLINES

Definitions

Database Management System - Definition and
Functionalities

Properties of Database

A Simplified Database System Environment

Example of a University Database


----- Page 3 -----
Definitions

Data: Raw, unprocessed facts
Ex: 25, Suresh, Bangalore
Information: Processed data

Ex: The age of Suresh is 25.

Database: Collection of related data

Ex: Online banking system, library management system

Meta-data: The database definition


----- Page 4 -----
+ Database Management System

% Definition: Collection of programs that enables users to create

and maintain the database.



----- Page 5 -----
Database Management System

Functionalities:
Define: Specifying the data type, structures and constraints
for the data to be stored.

Construct: Process of storing data on some storage medium.

Manipulate: Querying the database to retrieve specific data,
updating database and generating reports.

Share: Allows multiple users and programs to access the

database concurrently.


----- Page 6 -----
1. A database represents some aspects of the real world (miniworld).
2. A database is a logically coherent collection of data with some
inherent meaning.

3. A database is designed, built and populated with data for a

specific purpose.


----- Page 7 -----
OB System
. Users/Programmers
Environment i

Database
System Application
a Programs/Queries

DBMS

Software to Process Queries/Programs

Software
y

Software to Access Stored Data

Stored Db Stared

Definition
(MetaData) Database



----- Page 8 -----
STUDENT | Name Class | Major COURSE

CourseName

CourseNo

Smith 1 cS

CourseNo

GRADE_REPORT | Roll-No

CSI310

|
cE | CSI310

Data Structures

CSI310

Discrete
Mathematics

MATH2410

Database

S380

A Database that stores student and course
information



----- Page 9 -----
=>
=
=H

Database Management



----- Page 10 -----
“ FILE SYSTEM APPROACH

Accounts Dept. Exam Dept.

“+ DBMS APPROACH



----- Page 11 -----
. Self-Describing Nature of a Database System
Insulation between Programs and Data, and Data

Abstraction

. Support of Multiple Views of the Data

. Sharing of Data and Multiuser Transaction Processing



----- Page 12 -----
“+ Self-Describing Nature of a Database System

* Database system — Database + Meta-data (DB Definition)

Stored in: DBMS catalog

Used by: DBMS Software & Database Users


----- Page 13 -----
AN EXAMPLE OF DATABASE CATALOG

RELATIONS

COLUMNS

Relation.Name

No_of_Columns

Col_Name

Data_Type

Belongs_to_Relation

STUDENT

COURSE

Name
Roll_No
Class

Character(30)
Integer(4)

Integer(1)

STUDENT
STUDENT
STUDENT

GRADE_REPORT

Major

Major_type

STUDENT

CourseName

Character(10)

COURSE

Character(1)

GRADE_REPORT.



----- Page 14 -----
Self-Describing Nature of a Database System

Database system — Database + Meta got (DB Definition)

Stored in: DBMS catalog

Used by: DBMS Software & Database Users

DBMS software must work equally well with any number of
database applications.

In traditional file processing, data definition — part of

application programs — work with only one specific DB.


----- Page 15 -----
* In traditional file processing — structure of data files is

embedded in the application programs.

* In database approach — structure of data files is stored in the

DBMS catalog — separate from access programs

(program-data independence).



----- Page 16 -----
Data Item Name

Starting Position
in Record

Length in Characters
(bytes)

w

RollNo
Class

35

Major

39

Internal Storage Format for a STUDENT Record


----- Page 17 -----
The characteristic that allows program-data independence is

called data abstraction.
DBMS provides users with conceptual representation of data.
Data model — type of data abstraction — provides

conceptual representation.



----- Page 18 -----
]
* A database has many users, each of whom may require a
different view of database.

* A view — subset of database — contains virtual data derived

from database (not explicitly stored).



----- Page 19 -----
Sharing of Data and Multiuser Transaction
Processing

A multiuser DBMS allows multiple users to access the database
at the same time.

DBMS must include concurrency control.

OLTP (Online Transaction Processing) — major part of
database application.

DBMS must enforce several transaction properties:

i. Isolation ii. Atomicit



----- Page 20 -----
-
—aA
=H
Database Management
Systems

Introduction to Data Models



----- Page 21 -----
Data Models

vx Underlying structure of a database.
% Conceptual tool.

% Data + Relationship + Semantics + Constraints.

% Design the database at physical, logical and view level.


----- Page 22 -----
Relational Model.

. Entity-Relationship Model.
. Object-based Data Model.
. Semistructured Data Model.



----- Page 23 -----
1. Relational Model

Collection of tables.

Tables represent both data and relationships.

Multiple columns with unique names.

Tables = Relations.

Record-based model.

Fixed-format records of several types.

Each record type defines a fixed number of fields, or attributes.

Most widely used data model.

Yee ee Ye ee

Current DBS are based on relational model.



----- Page 24 -----
1. Relational Model

,
EMPLOYEE | FName

| |
Tom Ford

Amy | Jones

WoRKSN >

a

Relational Database Management Sai

x

Database

¥
Table

¥
Field
Field

Field

¥
Table

¥
Field

Field

«
Database

¥

PY
Table | Table

|

¥
Field | | Field
Field | Field

Field



----- Page 25 -----
E-R data model or E-R model.
Collection of basic objects called entities and its relationship.

An entity is a real world thing or object.

Distinguishable from other objects.

Widely used in database design.



----- Page 26 -----
2. Entity-Relationship Model



----- Page 27 -----
3. Object-Based Model

OOP Languages - C++, Java, C# etc.,

Need for Object-oriented data model.

Object-Based Model = E-R Model + OO features.
Object-Relational Data Model = Object-Based Model + Relational
Model. id



----- Page 28 -----
Z
fe}
a
a
wi
a



----- Page 29 -----
4. Semistructured Data Model

Specification of data.

Individual data items of the same type may have different sets of

attributes.
Contrast to previous data models.
Extensible Markup Language (XML).



----- Page 30 -----
% Network data model and Hierarchical data model.
wv

% Tied closely to underlying implementation.

% Complicated the task of modeling the data.

% Not widely used except old database.



----- Page 31 -----
i
emg
Wx

Database Management
Systeme

Instances and Schemas


----- Page 32 -----
The overall design of the database.

»
Database schema = Variable declaration.

Type definitions.
No frequent changes or not at all.
Example:
Student =
Rollno : (5);
Name : (25);
Class: (10);



----- Page 33 -----
Instances

3% The collection of information stored at a particular moment.
vx Frequent changes.
% Database instant = Value of the variable.

Logical Schema

Physical Schema



----- Page 34 -----
ro
ame!
Wx

Database Management
Systems

Three-Schema Architecture & Data Independence



----- Page 35 -----
Three-Schema Architecture

Goal: to separate the user applications and the physical

database.

3 Levels:
Internal Level:
= Describes the physical storage
structure of the database.
Describes complete details of
data storage and access

paths.

EXTERNAL LEVE

externalconceptual mapping

NCEPTUAL LEVE
conceptualintemal mapping

INTERNAL LEVEL



----- Page 36 -----
¢ Three-Schema Architecture

e Conceptual Level:
> Hides the details of the

physical storage structure and
concentrates on describing
entities, data types,

relationships, constraints, etc.
w

END USERS
EXTERNAL LEVE
extematiconceptual mapping
NCEPTUAL LEVEL
concoptualintomal mapping

INTERNAL LEVE



----- Page 37 -----
“ Three-Schema Architecture

e External Level:

> Describes the part of the ExTERWL LEVEL

database that a user is cineatgiaioaieg

DNCEPTUAL LEVE

interested in and hides the conceptusintenal mang

rest of the database from the

user group.



----- Page 38 -----
* Data Independence

3? Definition: Capacity to
change the schema at one level
of a database system without

having to change the schema

at the next higher level,

extomalconceptual mapping

NCEPTUAL LEVE

conceptualintemal mapping

INTERNAL LEVE



----- Page 39 -----
“ Data Independence

* Logical Data Independence:
¥

e Ability to modify the
conceptual schema
without changing the
external schemas or

application programs.

XTERNAL LEVE

extomalconceptual mapping

NCEPTUAL LEVE
cconcoptualntemal mapping

INTERNAL LEVE



----- Page 40 -----
> Data Independence

* Physical Data Independencg:

e Ability to modify the
internal schema without
changing the conceptual
schema.

Changes may be needed —

to improve performance.

EXTERNAL LEVE

cextematconceptual mapping

NCEPTUAL LEVE
concoptualintemal mapping

INTERNAL LEVE



----- Page 41 -----
Sa

Database Management
Systems

DBMS Languages, Interfaces & Classification



----- Page 42 -----
* In DBMS, where no strict
separation of levels is ‘manage
maintained, Data Definition cschaubeamaiSeptig
Language (DDL) is used to
define the internal and

conceptual schemas .


----- Page 43 -----
“* DBMS Languages

* In DBMS, where a clear

ENO USERS

separation is maintained between

conceptual and internal levels: yCEPTUNLLEVE
e DDL — used to specify the “EE
conceptual schema only.

e Storage Definition Language

(SDL) — used to specify the

internal schema.



----- Page 44 -----
“ DBMS Languages

* View Definition Language (VDL)
— to specify user views and their
mappings to the conceptual
schema.

Data Manipulation Language
(DML) — for manipulation of

data in the database.

XTERNAL LEVE

extemaliconceptual mapping

NCEPTUAL LEVE

conceptualiniemal maggang

INTERNAL LEVE



----- Page 45 -----
“¢ DBMS Languages

* Types of DMLs:

e High-level (or e Low-level (or procedural

non-procedural DML): DML):
> Used to specify complex > Embedded in a general
database operations in a purpose programming

concise manner. language.

> Also called set-at-a-time > Also called

DMLs. record-at-a-time DMLs.


----- Page 46 -----
These interfaces present
the users with a list of

options (menus).

Most popular — Pull-down
w

menus.

Menu Bar

~ Pull-down
Menu



----- Page 47 -----
e Displays a form to each

user.
equiren
mal Information

Designed and
programmed for the

naive users.



----- Page 48 -----
Displays a schema to the user in diagrammatic form.
Utilizes both menus and forms.

Uses a pointing device to pick certain parts of the displayed

diagram.



----- Page 49 -----
DBMS Interfaces

Natural Language Interfaces:

e@ Has its own schema and dictionary.

Refers to them while interpreting a request.

If interpretation is successful — high-level query generated

Query processing

Otherwise, a dialogue is started with the user for further
clarification.



----- Page 50 -----
DBMS Interfaces

* Interfaces for Parametric Users:
e Parametric users — have small set of operations that they

must perform repeatedly.

System analysts and programmers — design & implement a

special interface for these users.

* Interfaces for the DBA:

e Privileged commands (like for creating accounts, granting

access) that can be used only by the DBA’s staff.


----- Page 51 -----
r
=

xt

Database Management
Systems

Database System Environment



----- Page 52 -----
** OBMS Component Modules

e DDL compiler — processes

schema definition — stores

it in the catalog.

Query compiler — handles

high-level queries.

Pre-compiler — extracts

DML commands from an

avolication prograp.



----- Page 53 -----
“ OBMS Component Modules

e DML compiler — compilation of

DML commands into object code.

Runtime database processor —>

handles database accesses at

runtime.

Stored data manager — data

transfer between disk & main

memory.



----- Page 54 -----
“ Database System Utilities

* Common utilities have the following types of functions:

e Loading:

i. Used to load existing data files into the database.

ii. The source file format and the target data file structure

are mentioned to the utility

|
Automatically reformats the data
|

stores it in the database



----- Page 55 -----
“ Database System Utilities

* Common utilities have the following types of functions:

e File reorganization:

i. Used to reorganize a database file into a different file

organization.
Performance monitoring:

i. Monitors database usage and provides statistics to the

DBA.



----- Page 56 -----
Other Tools
w

CASE tools — used during the design of the database.
Data Dictionary (or data repository) system — storing catalog

information.

Application Development Environments — provides an

environment for developing database applications. Ex: JBuilder,
PowerBuilder system.

Communications software — remote access to the database.



----- Page 57 -----
¢- Centralized OBMS Architecture

* Earlier, mainframe computers
were used to process all system
functions.

* Users accessed systems via
computer terminals — provided
only display capabilities but no

processing capabilities.

Display Display Display
monitor monitor monitor
Network
Application Terminal Text
Programs Display Controt Editors,
Dems Compilers
SOFTWARE

)perating System

System bus
Controller Controller Controller
CPU
Memory Disk VO devices
(printers, tape
drives ..)

HARDWARE/FIRMWARE


----- Page 58 -----
Centralized OBMS Architecture

Processing — performed

. [oem
remotely on the computer :
system.

a
Only display information — sent cd

to the terminals.

Prices of hardware declined —>

Controller

CPU

terminals replaced by PCs & vary

workstations.

HARDWARE/FIRMWARE

Display Display
monitor ‘monitor
Network
Terminal Text
Display Control Editors
Dems Compilers
Dperating System

Controller Controller
Disk VO devices
(printers, tape

drives ..)



----- Page 59 -----
Basic Client/Server Architectures

Goal — define specialized
servers with specific
functionalities.

Client > user machine that

provides user interface

capabilities & local processing.

Server — provides services to

client machines,

PHYSICAL CLIENT-SERVER ARCHITECTURE

Yekess Cent sk Server & Cent

SERVER

CLIENT CUENT CUENT
Stet ‘site 2 ‘ste n

LOGICAL CLIENT-SERVER ARCHITECTURE

Client Client

Network.

Client

| | Dams
Server

Print | File

Server Server



----- Page 60 -----
In RDBMS, user interfaces & application programs — moved to

client side.

* Query & transaction functionality — on server side (query
server/transaction server).

* When DBMS access is required — program establishes a

connection with the DBMS (server side).


----- Page 61 -----
Two-Tier Client/Server Architectures

%* Open Database Connectivity (ODBC) — provides API >
allows programs (client-side) to call DBMS.

* Advantages of two-tier architecture:
i. Simplicity ii. Compatibility

* Emergence of World Wide Web — led to three-tier
architecture.


----- Page 62 -----
¢ Three-Tier Client/Server Architectures

* Additional intermediate layer
GUI,

between client & database server —> Web Interface

Application server or Web server.

Application Server | Application
or Programs,

Web Server Web Pages
Stores rules used to access data 2

Accepts requests from client
Database
Management
System

Database
Processes the requests Server

